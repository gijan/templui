package layouts

import (
	"github.com/axzilla/templui/helpers"
	"github.com/axzilla/templui/internal/config"
	"github.com/axzilla/templui/internal/ui/modules"
	"github.com/axzilla/templui/internal/ctxkeys"
)

templ ThemeScript() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			// Initial theme setup
			document.documentElement.classList.toggle('dark', localStorage.getItem('appTheme') === 'dark');

			document.addEventListener('alpine:init', () => {
				Alpine.data('themeHandler', () => ({
					isDark: localStorage.getItem('appTheme') === 'dark',
					themeClasses() {
						return this.isDark ? 'text-white' : 'bg-white text-black'
					},
					toggleTheme() {
						
						this.isDark = !this.isDark;
						localStorage.setItem('appTheme', this.isDark ? 'dark' : 'light');
						document.documentElement.classList.toggle('dark', this.isDark);
						
						// Event auslösen, dass das Theme geändert wurde
						document.dispatchEvent(new CustomEvent('theme-changed'));
					}
				}))
			})
		</script>
	}
}

templ BaseLayout(title, description string) {
	<!DOCTYPE html>
	<html lang="en" class="h-full">
		<head>
			// SEO
			@modules.SEO(title, description, ctx.Value(ctxkeys.URLPathValue).(string))
			// Charset & Viewport
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<style>
                [x-cloak] { display: none !important; }
            </style>
			// Plausible Analytics
			if config.AppConfig.GoEnv == "production" {
				<script defer data-domain="templui.io" src="https://plausible.axeladrian.com/js/script.js" nonce={ templ.GetNonce(ctx) }></script>
			}
			// Theme Script
			@ThemeScript()
			// Component Scripts
			@helpers.ComponentScripts()
			// Favicon
			<link rel="icon" href="/assets/img/favicon.svg" type="image/x-icon"/>
			// Tailwind CSS
			<link href="/assets/css/output.css" rel="stylesheet"/>
			// Custom CSS
			<link href="/assets/css/themes.css" rel="stylesheet"/>
			// Alpine.js 
			<script defer src="https://cdn.jsdelivr.net/npm/@alpinejs/csp@3.x.x/dist/cdn.min.js"></script>
			// HTMX
			<script nonce={ templ.GetNonce(ctx) } src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.4/dist/htmx.min.js"></script>
		</head>
		<body
			x-data="themeHandler"
			x-cloak
			class="h-full flex flex-col transition-colors duration-200"
			x-bind:class="themeClasses"
		>
			<div class="flex flex-col min-h-screen">
				{ children... }
			</div>
		</body>
	</html>
}
