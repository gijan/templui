package modules

import (
	"github.com/axzilla/templui/components"
	"github.com/axzilla/templui/icons"
	"github.com/axzilla/templui/internal/ctxkeys"
	"github.com/axzilla/templui/internal/shared"
	wrappedicons "github.com/axzilla/templui/internal/ui/icons"
)

templ Navbar() {
	<nav class="border-b py-3">
		<div class="container mx-auto px-4 flex justify-between items-center">
			<div class="flex items-center">
				@NavbarMobileMenu()
				<a href="/">
					@wrappedicons.TemplUI("w-auto h-12")
				</a>
			</div>
			<div class="hidden md:flex gap-4 items-center">
				<a href="/docs/getting-started" class="text-sm hover:underline">Docs</a>
				<a href="/docs/components" class="text-sm hover:underline">Components</a>
			</div>
			<div class="flex items-center">
				@components.Button(components.ButtonProps{
					Size:     components.ButtonSizeIcon,
					IconLeft: wrappedicons.GitHub(24),
					Variant:  "ghost",
					Href:     "https://github.com/axzilla/templui",
					Target:   "_blank",
				})
				@components.Button(components.ButtonProps{
					Size:     components.ButtonSizeIcon,
					IconLeft: wrappedicons.X(16),
					Variant:  "ghost",
					Href:     "https://x.com/_axzilla/",
					Target:   "_blank",
				})
				@ThemeSwitcher(ThemeSwitcherProps{})
			</div>
		</div>
	</nav>
}

templ NavbarMobileMenu() {
	@components.SheetRoot() {
		@components.Sheet(components.SheetProps{Side: components.SheetSideLeft}) {
			for _, section := range shared.Sections {
				<div class="pb-4">
					<h3 class="px-4 text-sm font-bold text-gray-600">{ section.Title }</h3>
					<ul class="mt-2 space-y-1">
						for _, link := range section.Links {
							<li>
								if link.Href == ctx.Value(ctxkeys.URLPathValue) {
									<a
										href={ templ.SafeURL(link.Href) }
										class={ "text-sm flex items-center px-4 py-2 rounded-md text-gray-700 dark:text-gray-200 bg-gray-100 dark:bg-gray-700" }
									>
										<span>{ link.Text }</span>
									</a>
								} else {
									<a
										href={ templ.SafeURL(link.Href) }
										class={ "text-sm flex items-center px-4 py-2 rounded-md text-gray-700 dark:text-gray-200 hover:bg-gray-100 dark:hover:bg-gray-700" }
									>
										<span>{ link.Text }</span>
									</a>
								}
							</li>
						}
					</ul>
				</div>
			}
		}
		@components.SheetTrigger(string(components.SheetSideLeft), components.SheetSideLeft) {
			<button
				class="mr-2 lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 focus:outline-hidden focus:ring-2 focus:ring-inset focus:ring-indigo-500"
			>
				@icons.SquareLibrary(icons.IconProps{})
			</button>
		}
	}
}
