package components

import "github.com/axzilla/templui/utils"

// FormItemProps represents form item properties
type FormItemProps struct {
	ID    string // Optional container ID
	Class string // Additional CSS classes
}

// FormLabelProps represents form label properties
type FormLabelProps struct {
	For           string // Target form element ID
	Text          string // Label text
	Class         string // Additional CSS classes
	DisabledClass string // Additional CSS classes when the form element is disabled
}

// FormDescriptionProps represents helper text properties
type FormDescriptionProps struct {
	Class string // Additional CSS classes
}

// FormMessageProps represents feedback message properties
type FormMessageProps struct {
	Type    string // error, success, warning, info
	Message string // Message text
	Class   string // Additional CSS classes
}

// FormItem wraps form elements in a vertical layout
templ FormItem(props FormItemProps) {
	<div class={ utils.TwMerge("space-y-2", props.Class) }>
		{ children... }
	</div>
}

// FormItemFlex wraps form elements in a horizontal layout
templ FormItemFlex(props FormItemProps) {
	<div class={ utils.TwMerge("items-center flex space-x-2", props.Class) }>
		{ children... }
	</div>
}

// FormLabel renders a form label
templ FormLabel(props FormLabelProps) {
	@Label(LabelProps{
		For:           props.For,
		Class:         props.Class,
		Text:          props.Text,
		DisabledClass: props.DisabledClass,
	})
}

// FormDescription renders helper text below form elements
templ FormDescription(props FormDescriptionProps) {
	<p class={ utils.TwMerge("text-sm text-muted-foreground", props.Class) }>
		{ children... }
	</p>
}

// FormMessage renders feedback messages
templ FormMessage(props FormMessageProps) {
	<p
		class={
			utils.TwMerge("text-[0.8rem] font-medium", props.Class),
			templ.KV("text-destructive", props.Type == "error"),
		}
	>
		{ props.Message }
	</p>
}
